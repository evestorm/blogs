import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.CAnTzXjG.js";const E=JSON.parse('{"title":"CSS 子元素文本长度超过父元素宽度的文本居中方法","description":"","frontmatter":{"date":"2023-02-17T00:00:00.000Z"},"headers":[],"relativePath":"1-前端/2-CSS/2-技巧/3-CSS 子元素文本长度超过父元素宽度的文本居中方法.md","filePath":"1-前端/2-CSS/2-技巧/3-CSS 子元素文本长度超过父元素宽度的文本居中方法.md"}'),t={name:"1-前端/2-CSS/2-技巧/3-CSS 子元素文本长度超过父元素宽度的文本居中方法.md"},l=n(`<h1 id="css-子元素文本长度超过父元素宽度的文本居中方法" tabindex="-1">CSS 子元素文本长度超过父元素宽度的文本居中方法 <a class="header-anchor" href="#css-子元素文本长度超过父元素宽度的文本居中方法" aria-label="Permalink to &quot;CSS 子元素文本长度超过父元素宽度的文本居中方法&quot;">​</a></h1><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;display: inline-block;width: 50px;&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &lt;p style=&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">display:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> inline-block;white-space:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> nowrap;margin-left:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 50%;transform:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> translateX(-50%);</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    黄浦哇哈哈乐百氏777哇哈哈很好的呀区</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>要点：</p><ol><li>子元素要设置不换行，并且是个内联块级元素，这样文本就拥有了实际宽度。</li><li>基于父元素50%宽度向右平移，将基准点定位在父元素中心点，即margin-left: 50%。</li><li>基于文本自身的宽度向左偏移一半的文本长度，即transform: translateX(-50%)。</li></ol>`,4),e=[l];function p(h,r,k,d,_,c){return a(),i("div",null,e)}const g=s(t,[["render",p]]);export{E as __pageData,g as default};
