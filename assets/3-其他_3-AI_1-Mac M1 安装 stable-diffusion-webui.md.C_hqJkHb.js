import{_ as i,c as a,o as e,a5 as s}from"./chunks/framework.CAnTzXjG.js";const t="/blogs/assets/sd-webui-install/homebrew.png",l="/blogs/assets/sd-webui-install/sd-webui-start.png",n="/blogs/assets/sd-webui-install/webui.png",r="/blogs/assets/sd-webui-install/huggingface.png",o="/blogs/assets/sd-webui-install/civitai.png",h="/blogs/assets/sd-webui-install/liblib.png",p="/blogs/assets/sd-webui-install/sdweb-intro.jpeg",F=JSON.parse('{"title":"Mac M1 安装 stable-diffusion-webui","description":"","frontmatter":{"date":"2023-09-27T00:00:00.000Z"},"headers":[],"relativePath":"3-其他/3-AI/1-Mac M1 安装 stable-diffusion-webui.md","filePath":"3-其他/3-AI/1-Mac M1 安装 stable-diffusion-webui.md"}'),b={name:"3-其他/3-AI/1-Mac M1 安装 stable-diffusion-webui.md"},u=s('<h1 id="mac-m1-安装-stable-diffusion-webui" tabindex="-1">Mac M1 安装 stable-diffusion-webui <a class="header-anchor" href="#mac-m1-安装-stable-diffusion-webui" aria-label="Permalink to &quot;Mac M1 安装 stable-diffusion-webui&quot;">​</a></h1><h2 id="什么是-stable-diffusion" tabindex="-1">什么是 Stable Diffusion <a class="header-anchor" href="#什么是-stable-diffusion" aria-label="Permalink to &quot;什么是 Stable Diffusion&quot;">​</a></h2><p>Stable Diffusion 是2022年发布的深度学习文本到图像生成模型。它主要用于根据文本的描述生成详细图像，它也可以应用于其他任务，如内补绘制、外补绘制，以及在提示词​（英语）指导下产生图生图的翻译。</p><h2 id="什么是-sd-webui-stable-diffusion-webui" tabindex="-1">什么是 SD-webui（stable-diffusion-webui） <a class="header-anchor" href="#什么是-sd-webui-stable-diffusion-webui" aria-label="Permalink to &quot;什么是 SD-webui（stable-diffusion-webui）&quot;">​</a></h2><p>越南超人 AUTOMATIC1111 针对 Stable Diffusion 开发的一套 GUI 图形化界面。它集成了大量代码层面的繁琐应用，将 Stable Diffusion 的各项绘图参数转化成可视化的选项数值和操控按钮。如今各类开源社区里 90%以上的拓展应用都是基于它而研发的。</p><h2 id="sd-webui-地址" tabindex="-1">SD-webui 地址 <a class="header-anchor" href="#sd-webui-地址" aria-label="Permalink to &quot;SD-webui 地址&quot;">​</a></h2><p>GitHub: <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui" target="_blank" rel="noreferrer">https://github.com/AUTOMATIC1111/stable-diffusion-webui</a></p><h2 id="安装环境" tabindex="-1">安装环境 <a class="header-anchor" href="#安装环境" aria-label="Permalink to &quot;安装环境&quot;">​</a></h2><ul><li>芯片: Apple M1 Pro</li><li>内存: 32G</li><li>MacOS: Ventura 13.0.1</li></ul><p>官方安装指南：<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Installation-on-Apple-Silicon" target="_blank" rel="noreferrer">Installation-on-Apple-Silicon</a></p><h2 id="安装步骤" tabindex="-1">安装步骤 <a class="header-anchor" href="#安装步骤" aria-label="Permalink to &quot;安装步骤&quot;">​</a></h2><h3 id="homebrew-安装" tabindex="-1">homebrew 安装 <a class="header-anchor" href="#homebrew-安装" aria-label="Permalink to &quot;homebrew 安装&quot;">​</a></h3><p>进入 <a href="https://brew.sh/" target="_blank" rel="noreferrer">https://brew.sh/</a> 官网，复制命令到本机 Terminal 执行：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+t+'" alt="homebrew-install"></p><p>看到上图的安装成功字眼后，复制「Next steps」下方的命令执行就 OK 了。</p><h3 id="安装-python3-和其他工具" tabindex="-1">安装 python3 和其他工具 <a class="header-anchor" href="#安装-python3-和其他工具" aria-label="Permalink to &quot;安装 python3 和其他工具&quot;">​</a></h3><p>终端执行:</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> protobuf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rust</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python@3.10</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wget</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>Cmake:开源的跨平台的构建工具，它用于自动化构建、测试和打包软件。</li><li>Protobuf：Google 开发的一种数据序列化格式，它可以将结构化数据序列化为二进制格式，提高数据传输效率。</li><li>Rust：系统级编程语言，它被设计为安全、并发和高效的语言，可以用于开发高性能的系统软件。</li><li>Python@3.10：Python 编程语言的一个版本，这里是指 Python 的 3.10 版本。</li><li>Git：分布式版本控制系统，用于跟踪和管理代码的变化，使得多人协作开发变得更加容易。</li><li>Wget：用于从 Web 上下载文件的命令行工具，可以通过命令行下载文件或者从脚本中自动下载文件。</li></ul><h3 id="下载-sd-webui-项目" tabindex="-1">下载 SD-webui 项目 <a class="header-anchor" href="#下载-sd-webui-项目" aria-label="Permalink to &quot;下载 SD-webui 项目&quot;">​</a></h3><p>进入你想要存放项目的目录下执行:</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:AUTOMATIC1111/stable-diffusion-webui.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>注意点：</p><p>安装的路径不要有中文且减少输入空格：因为整个代码运行都是使用的英文字符，文件夹中文名会导致在检索过程中出现无法识别等报错问题，所以记得将文件夹替换成拼音或者英文。 放置 WebUI 程序的文件夹预留至少 50G 以上空间：在后续使用 AI 绘画过程中会下载大量模型，要提取预留出磁盘空间。</p><h2 id="运行-sd-webui" tabindex="-1">运行 SD-webui <a class="header-anchor" href="#运行-sd-webui" aria-label="Permalink to &quot;运行 SD-webui&quot;">​</a></h2><p>在 SD-webui 项目目录下，终端输入命令 <code>./webui.sh</code> ，日后我们每次使用 WebUI 时都是用这个方法来打开。</p><p><img src="'+l+'" alt="sd-webui-start"></p><p>运行完成后会显示本地运行地址，将其粘贴到浏宽器中打开就好了。</p><p><img src="'+n+'" alt="webui"></p><h2 id="模型下载及初步绘图" tabindex="-1">模型下载及初步绘图 <a class="header-anchor" href="#模型下载及初步绘图" aria-label="Permalink to &quot;模型下载及初步绘图&quot;">​</a></h2><h3 id="常用模型下载网站" tabindex="-1">常用模型下载网站 <a class="header-anchor" href="#常用模型下载网站" aria-label="Permalink to &quot;常用模型下载网站&quot;">​</a></h3><p>Hugging Face（抱脸网）：专注于构建、训练和部署先进开源机器学习模型的网站，包含的内容非常广泛，不仅仅包括 AI 绘画，还包括很多其他 AI 领域的东西。</p><p>网站地址： <a href="https://huggingface.co/models" target="_blank" rel="noreferrer">https://huggingface.co/models</a></p><p><img src="'+r+'" alt="huggingface"></p><p>Civitai（C 站）：专业的 AI 绘画模型分享平台，无需注册即可访问和下载模型，包含模型的详细介绍、使用教程、参考图等丰富内容</p><p>网站地址： <a href="https://civitai.com/" target="_blank" rel="noreferrer">https://civitai.com/</a></p><p><img src="'+o+'" alt="civitai"></p><p>哩布哩布 AI：国内的 AI 绘画原创模型网站，包含大量模型和绘图作品，还支持在线 Stable Diffusion 绘图。</p><p>网站地址： <a href="https://www.liblib.ai/" target="_blank" rel="noreferrer">https://www.liblib.ai/</a></p><p><img src="'+h+'" alt="liblib"></p><h3 id="下载模型" tabindex="-1">下载模型 <a class="header-anchor" href="#下载模型" aria-label="Permalink to &quot;下载模型&quot;">​</a></h3><p>首先了解一下模型存放路径。</p><p>基本模型比较大，每个都是几个G，放在：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stable-diffusion-webui/models/Stable-diffusion</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>官方1.4和1.5模型，点击一个模型，然后点击 Files and versions 。寻找以.ckpt 或.safetensors为扩展名的文件，然后点击文件大小右边的向下箭头下载它们:</p><ul><li><a href="https://huggingface.co/CompVis/stable-diffusion-v-1-4-original" target="_blank" rel="noreferrer">Stable DIffusion 1.4</a> <a href="https://huggingface.co/CompVis/stable-diffusion-v-1-4-original/resolve/main/sd-v1-4.ckpt" target="_blank" rel="noreferrer">(sd-v1-4.ckpt)</a></li><li><a href="https://huggingface.co/runwayml/stable-diffusion-v1-5" target="_blank" rel="noreferrer">Stable Diffusion 1.5</a> <a href="https://huggingface.co/runwayml/stable-diffusion-v1-5/resolve/main/v1-5-pruned-emaonly.ckpt" target="_blank" rel="noreferrer">(v1-5-pruned-emaonly.ckpt)</a></li><li><a href="https://huggingface.co/runwayml/stable-diffusion-inpainting" target="_blank" rel="noreferrer">Stable Diffusion 1.5 Inpainting</a> <a href="https://huggingface.co/runwayml/stable-diffusion-inpainting/resolve/main/sd-v1-5-inpainting.ckpt" target="_blank" rel="noreferrer">(sd-v1-5-inpainting.ckpt)</a></li></ul><p>Stable Diffusion 2.0和2.1需要一个模型和一个配置文件，在生成图像时，图像宽度和高度需要设置为768或更高。</p><ul><li><a href="https://huggingface.co/stabilityai/stable-diffusion-2" target="_blank" rel="noreferrer">Stable Diffusion 2.0</a> <a href="https://huggingface.co/stabilityai/stable-diffusion-2/resolve/main/768-v-ema.ckpt" target="_blank" rel="noreferrer">(768-v-ema.ckpt)</a></li><li><a href="https://huggingface.co/stabilityai/stable-diffusion-2-1" target="_blank" rel="noreferrer">Stable Diffusion 2.1</a> <a href="https://huggingface.co/stabilityai/stable-diffusion-2-1/resolve/main/v2-1_768-ema-pruned.ckpt" target="_blank" rel="noreferrer">(v2-1_768-ema-pruned.ckpt)</a></li></ul><p>lora模型通常只有一百兆左右，放在 <code>stable-diffusion-webui/models/Lora</code></p><h3 id="文生图基本流程" tabindex="-1">文生图基本流程 <a class="header-anchor" href="#文生图基本流程" aria-label="Permalink to &quot;文生图基本流程&quot;">​</a></h3><p>找的网图：</p><p><img src="'+p+'" alt="sdweb-intro"></p>',53),d=[u];function c(f,g,k,m,w,_){return e(),a("div",null,d)}const y=i(b,[["render",c]]);export{F as __pageData,y as default};
